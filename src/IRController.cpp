#include <Arduino.h>
#include <IRController.h>

#include <IRremoteESP8266.h>
#include <IRsend.h>


const uint16_t IRController::turnON[] = {9050,4500, 550,1700, 550,1700, 550,550, 600,550, 600,550, 600,550, 550,550, 600,1700, 550,550, 600,1650, 600,1650, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 600,1650, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,1650, 600,550, 600,550, 600,1650, 600,550, 600,1650, 600,550, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 600,500, 650,500, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600};
const uint16_t IRController::temp18[] = {9000,4500, 600,1650, 600,1650, 600,550, 600,550, 550,550, 600,550, 600,550, 600,1650, 600,550, 550,1700, 550,1700, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,1650, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600};
const uint16_t IRController::temp23[] = {9050,4450, 600,1650, 600,1650, 600,550, 600,550, 600,550, 600,500, 600,550, 600,1650, 600,550, 550,1700, 550,1700, 550,600, 600,550, 550,550, 600,550, 600,550, 550,600, 550,550, 600,550, 600,550, 600,550, 550,550, 600,550, 550,600, 600,550, 600,1650, 600,500, 600,550, 650,1600, 600,550, 600,1650, 600,550, 600,550, 600,500, 600,550, 600,550, 550,600, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 550,600, 550,550, 600,550, 600,550, 600};


IRController::IRController(IRsend& irSender) : irSender(irSender) {}

void IRController::sendIRCommand(byte commandIndex) {
    switch (commandIndex) {
        case 1:
            irSender.sendRaw(turnON, sizeof(turnON) / sizeof(turnON[0]), FREQUENCY);
            break;
        case 2:
            irSender.sendRaw(temp18, sizeof(temp18) / sizeof(temp18[0]), FREQUENCY);
            break;
        case 3:
            irSender.sendRaw(temp23, sizeof(temp23) / sizeof(temp23[0]), FREQUENCY);
            break;
        default:
         Serial.println("Invalid index!");
         break;
    }
}


